class Solution {
public:
    int xorAllNums(vector<int>& nums1, vector<int>& nums2) {
        
        unordered_map<long,long> map;// nums,frequency
        long long n1 = nums1.size();
        long long n2 = nums2.size();
        // Compute the no. of pairs of nums1 elements
        for(int i=0;i<n1;i++) {
            map[nums1[i]] += n2;
        }
        // Compute the no. of pairs of nums2 elements
        for(int i=0;i<n2;i++) {
            map[nums2[i]] += n1;
        }
        // Add Odd occurring element
        long long ans = 0;
        for(auto it:map) {
            if(it.second%2 == 1) {
                ans = ans^it.first;
            }
        }
        return ans;
        
    }
};