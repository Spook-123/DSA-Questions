class Solution{
    public:
    void mergeTwoSortedArrays(vector<int>& arr1,vector<int>& arr2,vector<int>& temp) {
        
        int n1 = arr1.size();
        int n2 = arr2.size();
        int i = 0;
        int j = 0;
        int k = 0;
        while(i < n1 && j < n2) {
            
            if(arr1[i] < arr2[j]) {
                temp[k++] = arr1[i++];
            }
            else {
                temp[k++] = arr2[j++];
            }
        }
        
        while(i < n1) {
            temp[k++] = arr1[i++]; 
        }
        
        while(j < n2) {
            temp[k++] = arr2[j++];
        }
        
        
    }
    double MedianOfArrays(vector<int>& arr1, vector<int>& arr2)
    {
        int n1 = arr1.size();
        int n2 = arr2.size();
        // Create the auxiliary array
        vector<int> temp(n1+n2);
        // Merge Two sorted arrays
        mergeTwoSortedArrays(arr1,arr2,temp);
        // Compute the indexes 
        int n = temp.size();
        double val = 1.0;
        // Even elements
        if(n%2 == 0) {
            int index1 = (n)/2;
            int index2 = ((n)/2)-1;
            val = double(temp[index1]+temp[index2])/2;
        }
        // Odd elements
        else {
            int index = n/2;
            val = temp[index];
        }
        return val;
        
    
    }
};