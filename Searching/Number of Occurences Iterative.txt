class Solution{
public:	
	/* if x is present in arr[] then returns the count
		of occurrences of x, otherwise returns 0. */
	int firstIndex(int nums[],int target,int n) {
        int low = 0;
        int high = n-1;
        
        while(low <= high) {
            
            int mid = low + (high-low)/2;
            if(target > nums[mid] ) {
                low = mid+1;
            } 
            else if(target < nums[mid]) {
                high = mid-1;
            }
            else {
                if(mid == 0 || nums[mid-1] != nums[mid]) {
                    return mid;
                }
                else {
                    high = mid-1;
                }
            }
        }
        return -1;
        
    }
    int lastIndex(int nums[],int target,int n) {
        int low = 0;
        int high = n-1;
        
        while(low <= high ) {
            
            int mid = low + (high-low)/2;
            if(target > nums[mid]) {
                low = mid+1;
            }
            else if(target < nums[mid]) {
                high = mid-1;
            }
            else {
                if(mid == n-1 || nums[mid+1] != nums[mid]) {
                    return mid;
                }
                else {
                    low = mid+1;
                }
            }
        }
        return -1;
    }
	int count(int arr[], int n, int x) {
	    int index1 = firstIndex(arr,x,n);
	    int index2 = lastIndex(arr,x,n);
	    if(index1 == -1 || index2 == -1) {
	        return 0;
	    }
	    return index2-index1+1;
	}
};