class Solution {
public:
    void solve(vector<string> &ans,string temp,string digits,unordered_map<int,string>& m) {
        if(digits.empty()) {
            ans.push_back(temp);
            return ;
        }
        int digit = digits[0]-'0';
        string value = m[digit];
        
        for(int i=0;i<value.length();i++) {
            solve(ans,temp+value[i],digits.substr(1),m);
        }
        
        
    }
    vector<string> letterCombinations(string digits) {
        
        vector<string> ans;
        string temp = "";
        if(digits.length() == 0) {
            return ans;
        }
        unordered_map<int,string> m;
        m.insert({2,"abc"});
        m.insert({3,"def"});
        m.insert({4,"ghi"});
        m.insert({5,"jkl"});
        m.insert({6,"mno"});
        m.insert({7,"pqrs"});
        m.insert({8,"tuv"});
        m.insert({9,"wxyz"});
        solve(ans,temp,digits,m);
        
        return ans;
        
    }
};