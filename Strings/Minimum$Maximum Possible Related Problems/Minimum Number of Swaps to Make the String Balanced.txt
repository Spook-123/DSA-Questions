class Solution {
public:
    int minSwaps(string s) {
        
        int n = s.length();
        int close  = 0;
        int maxClose = 0;
        for(int i=0;i<n;i++) {
            // Start 'close' counter from 0 and if current character is opening then substract 1
            if(s[i] == '[') {
                close -= 1;
            }
            // Start 'close' counter from 0 and if current character is Closing then add 1 (for balancing)
            else {
                close += 1;
            }
            // Find max of swaps required to make string balance 
            maxClose = max(maxClose,close);
        }
        // This equation reduces the maxClose to minClose 
        return (maxClose+1)/2;
        
        
    }
};