class Solution {
public:
    bool isIsomorphic(string s, string t) {
        
        
        unordered_map<char,char> map1;// Unique character,unique character
        unordered_map<char,char> map2;// Same as above
        
        int n = s.length();
        for(int i=0;i<n;i++) {
            // Extract the first character of both strings
            char ch1 = s[i];
            char ch2 = t[i];
            
            // Check if both maps having unique mapping 
            if((map2.find(ch2) != map2.end() && map2[ch2] != ch1) || (map1.find(ch1) != map1.end() && map1[ch1] != ch2)) {
                return false;
            }
            // Map character 1 to character 2 and vice versa
            map1[ch1] = ch2;
            map2[ch2] = ch1;
            
        }
        
        return true;
        
        
        
        
    }
};