class Solution {
public:
    int findMin(vector<int>& nums) {
        int mini = INT_MAX;
        for(int i=0;i<nums.size();i++) {
            mini = min(mini,nums[i]);
        }
        return mini;
    }
    int largestSumAfterKNegations(vector<int>& nums, int k) {
        
        int n = nums.size();
        sort(nums.begin(),nums.end());
        for(int i=0;i<n;i++) {
            // change the sign only when "nums[i]" is negative and decrement the value of "k" 
            if(nums[i] < 0 && k > 0) {
                nums[i] = -nums[i];
                k -=1;
            }
        }
        // Add all the elements 
        int sum = 0;
        for(int i=0;i<n;i++) {
            sum += nums[i];
        }
        // find the minimum elements to perform remaining "k" operation
        int mini = findMin(nums);
        // odd "k" reduce the sum by 2*minimum value found 
        if(k%2 != 0) {
            sum -= mini*2;
        }
        // Even "k" sum remains as it is
        return sum;
        
    }
};